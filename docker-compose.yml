version: "3"

services:
  webdict:
#    build: .
    image: macyan/webdict:latest
    container_name: "webdict"
    hostname: "webdict"
    restart: always
    depends_on:
      - mongo
    deploy:
      resources:
        limits:
          memory: ${APP_MEMORY_LIMIT}

    # uncomment to expose directly (no proxy)
#    ports:
#      - "4000:4000"

    environment:
      - AUTH_TTL_AUTH
      - AUTH_TTL_REFRESH
      - AUTH_TTL_COOKIE
      - AUTH_SECRET
      - ADMIN_PASSWD
      - ADMIN_EMAIL
      - PORT
      - URL
      - DEBUG
      - GIN_MODE
      - MONGO_DB
      - MONGO_HOST
      - MONGO_USERNAME
      - MONGO_PASSWD
      - MONGO_PORT

  mongo:
    image: mongo:4.2.3
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWD}
    deploy:
      resources:
        limits:
          memory: ${MONGO_MEMORY_LIMIT}


  mongodb-backup:
    image: macyan/mongodb-backup:latest
    container_name: "mongodb-backup"
    restart: always
    environment:
      - MONGO_HOST
      - MONGO_PORT
      - MONGO_USERNAME
      - MONGO_PASSWD
      - MONGO_DB
      - CRON_TIME=${MONGO_BACKUP_CRON_TIME:-0 0 * * *}
      - MAX_BACKUPS=${MONGO_BACKUP_MAX_BACKUPS:-10}
    volumes:
      - ./backup:/backup

  webserver:
    image: nginx:1.25
    depends_on:
      - webdict
    ports:
      - "80:80"
      - "443:443"
    restart: unless-stopped
#    Need to run origin docker-entrypoint.sh as it processed templates with env variables.
    command: sh -c 'while :; do sleep 12h & wait $${!}; nginx -s reload; done & /docker-entrypoint.sh nginx -g "daemon off;";'
    volumes:
      - ./templates/nginx:/etc/nginx/templates
      - ./certbot/www:/var/www/certbot/:ro
      - ./certbot/conf/:/etc/nginx/ssl/:ro

    environment:
      - APP_PORT=${PORT}
      - SERVER_NAME
      - LOG_SYSLOG=false

#  docker compose run --rm  certbot certonly --webroot --webroot-path /var/www/certbot/ -d example.org - generate certificate before first run
  certbot:
    image: certbot/certbot:latest
    restart: unless-stopped
    volumes:
      - ./certbot/www/:/var/www/certbot/:rw
      - ./certbot/conf/:/etc/letsencrypt/:rw
    entrypoint: /bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'

  logger:
    image: umputun/dkll:latest
    container_name: "dkll-agent"
    hostname: "dkll-agent"
    restart: always

    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "10"

    environment:
      - LOG_FILES=true
      - LOG_SYSLOG=false
      - EXCLUDE=logger
      - MAX_FILES=10
      - MAX_SIZE=10 #MB
      - MAX_AGE=30 # days
      - DEBUG=true
      - APP_UID=0 # you can specify any userid with access to docker.sock or leave 0 to run with root access

    volumes:
      - ./logs:/srv/logs
      - /var/run/docker.sock:/var/run/docker.sock

    command: ["/srv/dkll", "agent"]
